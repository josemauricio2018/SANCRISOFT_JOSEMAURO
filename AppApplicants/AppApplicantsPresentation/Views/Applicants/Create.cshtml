@model AppAplicantsBAL.Models.ApplicantView

@{
    //Layout = null;
    ViewBag.Title = "Applicants";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>

    <link rel="stylesheet" href="../../Content/themes/base/jquery.ui.all.css">
    <script src="../../Scripts/jquery-1.7.1.js"></script>
    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>

    <script src="../../Scripts/jquery.ui.core.js"></script>
    <script src="../../Scripts/jquery.ui.widget.js"></script>
    <script src="../../Scripts/jquery.ui.accordion.js"></script>	

    <script type="text/jscript">

        $(function () {
            $("#accordion").accordion({
                collapsible: true
            });
        });

        // just for the demos, avoids form submit
        /*jQuery.validator.setDefaults({
            debug: true,
            success: "valid"
        });
        $("#registerFormId").validate({
            rules: {  
                'Email': {  
                    required: false,  
                    email: true  
                },  
  
                'Firts_Name': {
                    required: true,  
                    rangelength: [1, 30]
                },  
  
                'Second_Name': {
                    required: true,  
                    rangelength: [1, 30]
                },

                'Firts_Last_Name': {
                    required: true,
                    rangelength: [1, 30]
                },

                'Second_Last_Name': {
                    required: true,
                    rangelength: [1, 30]
                },

                'Street_Adress': {
                    required: true,
                    rangelength: [1, 100]
                },

                'City': {
                    required: true,
                    rangelength: [1, 50]
                },

                'Country': {
                    required: true,
                    rangelength: [1, 100]
                },

                'Postal_Code': {
                    required: true,
                    rangelength: [1, 5]
                },

            },  
            messages: {  
                'Email': 'Please enter valid email address',  
  
                'Firts_Name': {
                    required: 'Please provide a First Name',  
                    rangelength: 'Your First Name must be in the range 1, 30 characters long'  
                },  
  
                'Second_Name': {  
                    required: 'Please provide a Second Name',
                    rangelength: 'Your Second Name must be in the range 1, 30 characters long'
                },

                'Firts_Last_Name': {
                    required: 'Please provide a First Last Name',
                    rangelength: 'Your First Last Name must be in the range 1, 30 characters long'
                },

                'Second_Last_Name': {
                    required: 'Please provide a Second Last Name',
                    rangelength: 'Your Second Last Name must be in the range 1, 30 characters long'
                },

                'Street_Addres': {
                    required: 'Please provide a Street Address',
                    rangelength: 'Your Street Address must be in the range 1, 100 characters long'
                },

                'City': {
                    required: 'Please provide a City',
                    rangelength: 'Your City must be in the range 1, 50 characters long'
                },

                'Country': {
                    required: 'Please provide a Country',
                    rangelength: 'Your Country must be in the range 1, 100 characters long'
                }


            },  
            submitHandler: function (form) {
                form.submit();
            }
        });

        jQuery.validator.addMethod("Country_Code", function (value, element) {
            return this.optional(element) || /^[0-9]{2}$/.test(value);
        }, "Please entered the correct country code.");
        
        jQuery.validator.addMethod("Area_Code", function (value, element) {
            return this.optional(element) || /^[0-9]{3}$/.test(value);
        }, "Please entered the correct área code.");
        
        jQuery.validator.addMethod("International_Phone_Number", function (value, element) {
            return this.optional(element) || /^[0-9]{7}$/.test(value);
        }, "Please entered the correct international phone number.");
        */

        $(document).ready(function () {
            var Description_Biography = "Academic Trainig:<br /><br />Work Experience:<br /><br />";
            $('#Biography').val(Description_Biography);            

            $('#Biography').keypress(function(){
                if (this.value.length > 100) // allowing you to enter only 100 chars.
                    return false;        
            });​
        });

		$("#International_Phone_Number").change(function () {
			$("#International_Phone_Number").val($("#Country_Code").val()+"-"+$("#Area_Code").val()+"-"+$("#International_Phone_Number").val());
		});
		
		$("#Country_Code").change(function () {
			$("#International_Phone_Number").val($("#Country_Code").val()+"-"+$("#Area_Code").val()+"-"+$("#International_Phone_Number").val());
		});
		
		$("#Area_Code").change(function () {
			$("#International_Phone_Number").val($("#Country_Code").val()+"-"+$("#Area_Code").val()+"-"+$("#International_Phone_Number").val());
		});
		
        $(function () {
            $("#Create").click(function () {

                Result = false;
                //&& /^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,4})+$/.test($("#Email").val().trim())

                if ($("#Email").val() != null) {
                    if ($("#First_Name").val() == null || ($("#Firts_Name").val() != null && $("#Firts_Name").val().length >= 1 && $("#Firts_Name").val().length <= 30)) {                    
                        if ($("#Second_Name").val() != null && $("#Second_Name").val().length >= 1 && $("#Second_Name").val().length <= 30) {
                            if ($("#Firts_Last_Name").val() != null && $("#Firts_Last_Name").val().length >= 1 && $("#Firts_Last_Name").val().length <= 30) {
                                if ($("#Second_Last_Name").val() != null && $("#Second_Last_Name").val().length >= 1 && $("#Second_Last_Name").val().length <= 30) {
                                    if ($("#Country_Code").val() != null && $("#Country_Code").val().length == 2) {
                                        if ($("#Area_Code").val() != null && $("#Area_Code").val().length == 3) {
                                            if ($("#International_Phone_Number").val() != null && $("#International_Phone_Number").val().length == 7) {
                                                if ($("#Street_Adress").val() != null && $("#Street_Adress").val().length >= 1 && $("#Street_Adress").val().length <= 100) {
                                                    if ($("#City").val() != null && $("#City").val().length >= 1 && $("#City").val().length <= 50) {
                                                        if ($("#Country").val() != null && $("#Country").val().length >= 1 && $("#Country").val().length <= 50) {

                                                            Result= true;

                                                        } else {
                                                            if ($("#Country").val() == null){
                                                                alert('Please provide a Country');
                                                            }
                                                            else {
                                                                alert('Your Country must be in the range 1, 50 characters long');
                                                            }
                                                        } 

                                                    } else {
                                                        if ($("#City").val() == null){
                                                            alert('Please provide a City');
                                                        }
                                                        else {
                                                            alert('Your City must be in the range 1, 50 characters long');
                                                        }
                                                    } 
                                                } else {
                                                    if ($("#Street_Adress").val() == null){
                                                        alert('Please provide a Street Address');
                                                    }
                                                    else {
                                                        alert('Your Street Adress must be in the range 1, 100 characters long');
                                                    }
                                                } 
                                            } else {
                                                if ($("#International_Phone_Number").val() == null){
                                                    alert('Please provide a International Phone Number');
                                                }
                                                else {
                                                    alert('Your International Phone Number must be 7 characters long');
                                                }
                                            } 
                                        } else {
                                            if ($("#Area_Code").val() == null){
                                                alert('Please provide a Area Code');
                                            }
                                            else {
                                                alert('Your Area Code must be in the range 1, 3 characters long');
                                            }
                                        } 
                                    } else {
                                        if ($("#Country_Code").val() == null){
                                            alert('Please provide a Country Code');
                                        }
                                        else {
                                            alert('Your Country Code must be 2 characters long');
                                        }
                                    } 
                                } else {
                                    if ($("#Second_Last_Name").val() == null){
                                        alert('Please provide a Second Last Name');
                                    }
                                    else {
                                        alert('Your Second Last Name must be in the range 1, 30 characters long');
                                    }
                                } 
                            } else {
                                if ($("#First_Last_Name").val() == null){
                                    alert('Please provide a First Last Name');
                                }
                                else {
                                    alert('Your First Last Name must be in the range 1, 30 characters long');
                                }                            
                            } 
                        } else {
                            if ($("#Second_Name").val() == null){
                                alert('Please provide a Second_Name');
                            }
                            else {
                                alert('Your Second Name must be in the range 1, 30 characters long');
                            }
                        } 
                    } else{
                        if ($("#Firts_Name").val() == null){
                            alert('Please provide a First Name');
                        }
                        else {
                            alert('Your First Name must be in the range 1, 30 characters long');
                        }                    
                    } 
                } else {
                    alert('Please enter valid email address');
                }
                    

                return Result;
                });
        });


        $(function () {
            $("#create").click(function () {				
                $("form").attr("action", "/Applicants/Create");
            });

            $("#salir").click(function () {
                $("form").attr("action", "/Applicants/Exit");
            });
        });

    </script>
    
</head>
<body>

<h2>Module Applicants</h2>

<div id="accordion">
  <h3><a href="#">Information Personal</a></h3>
    <div>
        
    @*@using (Html.BeginForm()) {*@

    @using (Html.BeginForm())
    {  
    @Html.ValidationSummary(true)

     <fieldset>
        <legend>Clientes</legend>

        <table>
             <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ID_Job, new { style = "display:inline; font-size: 12pt; font-weight: bold;" })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ID_Job, Model.sjobs, "--Select a Job--")
                        @Html.ValidationMessageFor(model => model.ID_Job)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Firts_Name, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_First_Name" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Firts_Name, new {@class="Editorfor_First_Name" })
                        @Html.ValidationMessageFor(model => model.Firts_Name)               
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Second_Name, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Second_Name" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Second_Name, new {@class="Editorfor_Second_Name" })
                        @Html.ValidationMessageFor(model => model.Second_Name)               
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.First_Last_Name, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_First_Last_Name" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.First_Last_Name, new { @class="Editorfor_First_Last_Name" })
                        @Html.ValidationMessageFor(model => model.First_Last_Name)               
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Second_Last_Name, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Second_Last_Name" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Second_Last_Name, new { @class="Editorfor_Second_Name" })
                        @Html.ValidationMessageFor(model => model.Second_Last_Name)               
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Email, new { style = "display:inline; font-size: 12pt; font-weight: bold;" })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Email, new { cssClass = "Editorfor_SegundoNombre" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.International_Phone_Number, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_International_Phone_Number" })
                    </div>
                </td>
                 <td>
                     <div class="editor-field">
                        @Html.TextBoxFor(model => model.Country_Code, new { @class="Editorfor_Country_Code", style="width:30px" })
                        @Html.ValidationMessageFor(model => model.Country_Code)               
                    </div>
                    <div>
                        @Html.Label("-")
                    </div>
                     <div class="editor-field">
                        @Html.TextBoxFor(model => model.Area_Code, new { @class="Editorfor_Area_Code", style="width:30px" })
                        @Html.ValidationMessageFor(model => model.Area_Code)               
                    </div>                    
                     <div>
                        @Html.Label("-")
                    </div>
                     <div class="editor-field">
                        @Html.TextBoxFor(model => model.International_Phone_Number, new { @class="Editorfor_International_Phone_Number", style="width:100px" })
                        @Html.ValidationMessageFor(model => model.International_Phone_Number)               
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Birtday, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Birthday" })
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Birtday, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Birtday, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Birtday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>


            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Street_Adress, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Street_Adress" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Street_Adress, new {@class="Editorfor_Street_Adress" })
                        @Html.ValidationMessageFor(model => model.Street_Adress)               
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.City, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="City" })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.City, new { cssClass = "Editorfor_City" })
                        @Html.ValidationMessageFor(model => model.City)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Country, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Country" })
                    </div>
                </td>
                 <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Country, new {@class="Editorfor_Country" })
                        @Html.ValidationMessageFor(model => model.Country)               
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Postal_Code, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Postal_Code" })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Postal_Code, new { cssClass = "Editorfor_Postal_Code" })
                        @Html.ValidationMessageFor(model => model.Postal_Code)
                    </div>
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Biography, new { style = "display:inline; font-size: 12pt; font-weight: bold;", @class="Labelfor_Biography" })
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.TextAreaFor(model => model.Biography, new { @class = "form-control", @rows=6, @maxlength=100 }) 
                    </div>
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    <p>
                        <input type="submit" id="create" value="Save" />

                        @*<div class="editor-label">
                            @Html.LabelFor(model => model.PathPhotoLocal)
                        </div>*@

                    </p>
                </td>
                <td>
                    <p>
                        <input type="submit" id="clear" value="Clear" />
                    </p>
                </td>
            </tr>
        </table>

    </fieldset>
    }
    </div>

    <h3><a href="#">Photo Applicant</a></h3>
    <div class="editor-field ui-widget">
        @Html.Partial("~/Views/Widget_Photo_Upload/Index.cshtml")
    </div>

    <h3><a href="#">Files Adjunts</a></h3>
    <div class="editor-field ui-widget">
        @Html.Partial("~/Views/Widget_File_Adjunts_Upload/Index.cshtml")
    </div>
 </div>

<div class="editor-field ui-widget">
    <br />
    <br />
    @Html.Partial("~/Views/Report_Applicants/Index.cshtml")
</div>


 @section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
    @Scripts.Render("~/bundles/jqueryui")  
    @Styles.Render("~/Content/cssjqryUi")  
  
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "mm/dd/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
    </script>  
 }

</body>
</html>
