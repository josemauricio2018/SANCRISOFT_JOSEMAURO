@using AppAplicantsBAL.Models;
@model AppAplicantsBAL.Models.ApplicantView

<html>
<head>
    <title>Index</title>

    <link href="/Content/Site.css" rel="stylesheet" />
    <link href="/Content/bootstrap/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Libs -->
    <script src="/Scripts/jquery-1.7.1.js"></script>
    <script src="/Content/bootstrap/js/bootstrap.min.js"></script>

    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>

    <script type="text/jscript">
        
        $(function () {
            $("#save_File_Upload").click(function () {
                $("form").attr("action", "/Applicants/Save_File_Adjunt");
            });

            $("#salir").click(function () {
                $("form").attr("action", "/Applicants/Exit");
            });
        });

        // just for the demos, avoids form submit
        jQuery.validator.setDefaults({
            debug: true,
            success: "valid"
        });
        $("#registerFormId").validate({
            rules: {
                txtUpload: {
                    required: true,
                    extension: "pdf|doc|docx|png|gif|jpeg|png",
                    accept: "application/pdf,image/jpeg,image/png,image/gif",
                    filesize: 5120000   //max size 5120 kb 5 mb                
                }
            }, messages: {
                txtUpload: {
                        filesize:" file size must be less than 5 MB.",
                        accept:"Please upload .jpg or .png or .gif or .pdf or .doc or .docx file of notice.",
                        required:"Please upload file."
                }
            },
            submitHandler: function(form) {
                form.submit();
            } 
        });

    </script>
</head>
<body>
    @{
        ApplicantView applicant = new ApplicantView();
        applicant = TempData["ModelApplicant"] as ApplicantView;

        AppApplicants.Models.Files_Adjunt reportFiles_Adjunt = new AppApplicants.Models.Files_Adjunt();    
        IEnumerable<AppApplicants.Models.Files_Adjunt> lstReportFiles_Adjunt = TempData["ReportFiles_Adjunt"] as IEnumerable<AppApplicants.Models.Files_Adjunt>;

        var grid = new WebGrid(lstReportFiles_Adjunt, canPage: true, rowsPerPage: 5, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
        grid.Pager(WebGridPagerModes.NextPrevious);
    }

    <div>
        
        @*@using (Html.BeginForm("Applicants", "Upload_File_Adjunts", FormMethod.Post, new { enctype = "multipart/form-data", @id="frm" }))
        {
            <input type="text" name="txtFile_Adjunt" id="file_Adjunt" value="File Adjunt: " />
            <input type="file" id="txtUpload" />
            <input type="button" value="Upload" id="btnUpload" />
        }*@

        @*<form method="post" action='@Url.Action("Applicants", "Upload_File_Adjunts")'>*@

        @using (Html.BeginForm("Applicants", "Upload_File_Adjunts", FormMethod.Post, new { @id = "registerFormId", @class = "form-horizontal", role = "form" }))  
        {          
            <div class="k-content">
                <input type="text" name="txtFile_Adjunt" id="file_Adjunt" value="File Adjunt: " />
                <input type="file" id="txtUpload" name="Upload" />
                <input type="button" value="Upload" id="btnUpload" />
                <label for="txtUpload">Required, pdf or word or images files only:</label>
            </div>
        }
        @*</form>*@
        

        @if (lstReportFiles_Adjunt != null)
        {
            <div id="gridContent">
            @{
                var gridColumns = new List<WebGridColumn>();     
                gridColumns.Add(grid.Column("File Name", "File_Name"));       
                gridColumns.Add(grid.Column("Size", "Size"));
                gridColumns.Add(grid.Column("Description", "Description_File"));
                gridColumns.Add(grid.Column("Path File Local", "Path_File_Local"));

                gridColumns.Add(grid.Column("Edit", "Edit", canSort: false, style: "Edit_File_Adjunt", format: (item) => Html.ActionLink("Edit", "Edit_File_Adjunt", "Applicants", new { Consecutive_File_Adjunt = @item.Consecutive, Modulo = 2 }, null)));
            }

            @grid.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: grid.Columns(gridColumns.ToArray())
            )

            @if (grid.HasSelection)
            {
                reportFiles_Adjunt = (AppApplicants.Models.Files_Adjunt)grid.Rows[grid.SelectedIndex].Value;
                        <b>File Name</b> @reportFiles_Adjunt.File_Name<br />
                        <b>Size</b> @reportFiles_Adjunt.Size<br />
                        <b>Description</b> @reportFiles_Adjunt.Description_File<br />
                        <b>Path File Local</b> @reportFiles_Adjunt.Path_File_Local<br />
            }
        
            </div>    
        }


        @using (Html.BeginForm())
        {  
            
        @*@using (Html.BeginForm("Applicants", "Upload_File_Adjunts", FormMethod.Post, new { enctype = "multipart/form-data", @id = "frm" }))
        {*@
            
            if (applicant != null)
            {
                @Html.HiddenFor(model =>model.file_Adjunt.File_Name, new {@Value = applicant.file_Adjunt.File_Name})
                @Html.HiddenFor(model =>model.file_Adjunt.Description_File, new {@Value = applicant.file_Adjunt.Description_File})           
                @*@Html.HiddenFor(model =>model.Codigo_Error, new {@Value = business.Codigo_Error})                
                @Html.HiddenFor(model =>model.Descripcion_Error, new {@Value = business.Descripcion_Error})*@
                
                <textarea class="form-control" 
                id="Description" 
                name="Description" 
                rows="2"
                cols="50"></textarea>
            
                <input type="submit" id="save_File_Upload" value="Save" />
                <input type="submit" id="exit" value="Exit" /> 

            }
        }


    </div>
</body>
</html>
