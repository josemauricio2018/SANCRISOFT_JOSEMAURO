@using AppAplicantsBAL.Models;
@model AppAplicantsBAL.Models.ApplicantView

<html>
<head>
    <title>Index</title>

    <link href="/Content/Site.css" rel="stylesheet" />
    <script src="/Scripts/jquery-1.7.1.js"></script>    
    <link href="../../Content/WebGrid_CSS.css" rel="stylesheet" />

    <style type="text/css">
        .webGrid { margin: 4px; border-collapse: collapse; width: 900px;  background-color:#FFFFFF;}
        .header { background-color: #C1D4E6; font-weight: bold; color: #FFF; }
        .webGrid th, .webGrid td { border: 1px solid #C0C0C0; padding: 5px; }
        .alt { background-color: #E4E9F5; color: #000; }
        .gridHead a:hover {text-decoration:underline;}
        .description { width:auto}
        .select{background-color: #389DF5}
    </style>

    <script type="text/javascript">
        
        $(function () {
            $("#save_File_Upload").click(function () {
                $("form").attr("action", "/Applicants/Save_File_Adjunt");
            });

            $("#salir").click(function () {
                $("form").attr("action", "/Applicants/Exit");
            });
        });

        $(document).ready(function () {

            $("#Description_File_Adjunt").change(function () {

                $("#Description_File").val($("#Description_File_Adjunt").val());

            });

            $('#btnUploadFU').click(function () {
  
                // Checking whether FormData is available in browser  
                if (window.FormData !== undefined) {  
                    var fileUpload = $("#txtUploadFU").get(0);  
                    var files = fileUpload.files;  
                    
                    var fileName = "";
                    var size = 0;
                    var typeFile = "";

                    // Create FormData object  
                    var fileData = new FormData();  
  
                    // Looping over all files and add it to FormData object  
                    for (var i = 0; i < files.length; i++) {  
                        //fileData.append(files[i].name, files[i]);  
                        fileName = files[i].name;
                        size = files[i].size;
                        typeFile = files[i].type;
                    }
                    
                    if (size > 1 && size <= 5120000 && (typeFile == "application/pdf" || typeFile == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" || typeFile == "image/png" || typeFile == "image/gif" || typeFile == "image/jpeg")) {
                        var formData = new FormData();
                        var totalFiles = document.getElementById("txtUploadFU").files.length;
                        for (var i = 0; i < totalFiles; i++) {
                            var file = document.getElementById("txtUploadFU").files[i];

                            formData.append("txtUploadFU", file);
                        }

                        $.ajax({
                            type: "POST",
                            url: '/Applicants/Upload_File_Adjunts',
                            data: formData,
                            dataType: 'json',
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                alert('succes!!');
                            },
                            error: function (error) {
                                alert("errror");
                            }
                        });

                        /*var dataRow = {
                            'Description_File': $('#Description_File').val()
                        }
                        $.ajax({
                            type: "POST",
                            url: '/Applicants/Save_Description_File',
                            data: dataRow,
                            dataType: 'json',
                            contentType: false,
                            processData: false,
                            success: function (response) {
                                alert('succes!!');
                            },
                            error: function (error) {
                                alert("errror");
                            }
                        });*/

                        var dataRow = {
                            'Description_File': $('#Description_File').val()
                        }
                        $.ajax({
                            type: 'POST',
                            url: "/Applicants/Save_Description_File",
                            data: dataRow,
                            success: function (response) {
                                alert('succes!!');
                            },
                            error: function (error) {
                                alert("errror");
                            }
                        });

                    } else {
                        if (!(size > 1 && size <= 5120000)) {
                            alert('file size must be less than 5 MB.');
                        }
                        else {
                            alert('Please upload .jpg or .png or .gif or .pdf or .doc or .docx file of notice.');
                        }
                    }

                } else {  
                    alert("FormData is not supported.");  
                }  
            });  
        });

        function validateText_Area(e, obj) {
            tecla = (document.all) ? e.keyCode : e.which;
            if (tecla != 13) return;
            rowsf = obj.rows;
            txt = obj.value.split('\n');
            return (txt.length < rowsf);
        }
    </script>
</head>
<body>
    @{
        ApplicantView applicant = new ApplicantView();
        applicant = TempData["ModelApplicant"] as ApplicantView;

        AppApplicants.Models.Files_Adjunt reportFiles_Adjunt = new AppApplicants.Models.Files_Adjunt();    
        IEnumerable<AppApplicants.Models.Files_Adjunt> lstReportFiles_Adjunt = TempData["ReportFiles_Adjunt"] as IEnumerable<AppApplicants.Models.Files_Adjunt>;

        var grid = new WebGrid(lstReportFiles_Adjunt, canPage: true, rowsPerPage: 5, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
        grid.Pager(WebGridPagerModes.NextPrevious);
    }

    <div>        

        @using (Html.BeginForm())
        {          
            <div class="k-content">
                <label for="txtUploadFU">Required, pdf or word or images files only:</label>
                <input type="text" name="txtFile_Adjunt" id="file_AdjuntFU" value="File Adjunt: " />
                <input type="file" id="txtUploadFU" name="Upload" />
                <input type="button" value="Upload" id="btnUploadFU" />
            </div>
          
            //if (applicant != null)
            //{
            //@Html.HiddenFor(model =>model.file_Adjunt.File_Name, new {@Value = applicant.file_Adjunt.File_Name})
            @Html.HiddenFor(model => model.Description_File);//, new {@Value = applicant.Description_File})           
            @*@Html.HiddenFor(model =>model.Codigo_Error, new {@Value = business.Codigo_Error})                
            @Html.HiddenFor(model =>model.Descripcion_Error, new {@Value = business.Descripcion_Error})*@
                
            <textarea class="form-control" 
            id="Description_File_Adjunt" 
            name="Description_File_Adjunt" 
            rows="2"
            cols="50"
            onkeypress = "return validateText_Area(event,this)" ></textarea>
            
                @*<input type="submit" id="save_File_Upload" value="Save" />
                <input type="submit" id="exit" value="Exit" /> *@
            //}
        }

        @if (lstReportFiles_Adjunt != null)
        {
            <div id="gridContent">
            @{
                var gridColumns = new List<WebGridColumn>();     
                gridColumns.Add(grid.Column("File Name", "File_Name"));       
                gridColumns.Add(grid.Column("Size", "Size"));
                gridColumns.Add(grid.Column("Description", "Description_File"));
                gridColumns.Add(grid.Column("Path File Local", "Path_File_Local"));
            }

            @grid.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: grid.Columns(gridColumns.ToArray())
            )

            @if (grid.HasSelection)
            {
                reportFiles_Adjunt = (AppApplicants.Models.Files_Adjunt)grid.Rows[grid.SelectedIndex].Value;
                        <b>File Name</b> @reportFiles_Adjunt.File_Name<br />
                        <b>Size</b> @reportFiles_Adjunt.Size<br />
                        <b>Description</b> @reportFiles_Adjunt.Description_File<br />
                        <b>Path File Local</b> @reportFiles_Adjunt.Path_File_Local<br />
            }
        
            </div>    
        }

    </div>
</body>
</html>
